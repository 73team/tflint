// Automatically generated by MockGen. DO NOT EDIT!
// Source: printer/printer.go

package mock

import (
	gomock "github.com/golang/mock/gomock"
	issue "github.com/wata727/tflint/issue"
)

// Mock of PrinterIF interface
type MockPrinterIF struct {
	ctrl     *gomock.Controller
	recorder *_MockPrinterIFRecorder
}

// Recorder for MockPrinterIF (not exported)
type _MockPrinterIFRecorder struct {
	mock *MockPrinterIF
}

func NewMockPrinterIF(ctrl *gomock.Controller) *MockPrinterIF {
	mock := &MockPrinterIF{ctrl: ctrl}
	mock.recorder = &_MockPrinterIFRecorder{mock}
	return mock
}

func (_m *MockPrinterIF) EXPECT() *_MockPrinterIFRecorder {
	return _m.recorder
}

func (_m *MockPrinterIF) Print(issues []*issue.Issue, format string) {
	_m.ctrl.Call(_m, "Print", issues, format)
}

func (_mr *_MockPrinterIFRecorder) Print(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Print", arg0, arg1)
}
