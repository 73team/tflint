// Automatically generated by MockGen. DO NOT EDIT!
// Source: detector/detector.go

package mock

import (
	gomock "github.com/golang/mock/gomock"
	issue "github.com/wata727/tflint/issue"
)

// Mock of DetectorIF interface
type MockDetectorIF struct {
	ctrl     *gomock.Controller
	recorder *_MockDetectorIFRecorder
}

// Recorder for MockDetectorIF (not exported)
type _MockDetectorIFRecorder struct {
	mock *MockDetectorIF
}

func NewMockDetectorIF(ctrl *gomock.Controller) *MockDetectorIF {
	mock := &MockDetectorIF{ctrl: ctrl}
	mock.recorder = &_MockDetectorIFRecorder{mock}
	return mock
}

func (_m *MockDetectorIF) EXPECT() *_MockDetectorIFRecorder {
	return _m.recorder
}

func (_m *MockDetectorIF) Detect() []*issue.Issue {
	ret := _m.ctrl.Call(_m, "Detect")
	ret0, _ := ret[0].([]*issue.Issue)
	return ret0
}

func (_mr *_MockDetectorIFRecorder) Detect() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Detect")
}

func (_m *MockDetectorIF) HasError() bool {
	ret := _m.ctrl.Call(_m, "HasError")
	ret0, _ := ret[0].(bool)
	return ret0
}

func (_mr *_MockDetectorIFRecorder) HasError() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "HasError")
}
