// This file generated by `tools/model-rule-gen/main.go`. DO NOT EDIT

package models

import (
	"log"
	"regexp"

	"github.com/hashicorp/hcl2/hcl"
	"github.com/wata727/tflint/issue"
	"github.com/wata727/tflint/tflint"
)

// AwsKmsGrantInvalidRetireePrincipalRule checks the pattern is valid
type AwsKmsGrantInvalidRetireePrincipalRule struct {
	resourceType  string
	attributeName string
	max           int
	min           int
	pattern       *regexp.Regexp
}

// NewAwsKmsGrantInvalidRetireePrincipalRule returns new rule with default attributes
func NewAwsKmsGrantInvalidRetireePrincipalRule() *AwsKmsGrantInvalidRetireePrincipalRule {
	return &AwsKmsGrantInvalidRetireePrincipalRule{
		resourceType:  "aws_kms_grant",
		attributeName: "retiree_principal",
		max:           256,
		min:           1,
		pattern:       regexp.MustCompile(`^[\w+=,.@:/-]+$`),
	}
}

// Name returns the rule name
func (r *AwsKmsGrantInvalidRetireePrincipalRule) Name() string {
	return "aws_kms_grant_invalid_retiree_principal"
}

// Enabled returns whether the rule is enabled by default
func (r *AwsKmsGrantInvalidRetireePrincipalRule) Enabled() bool {
	return true
}

// Type returns the rule severity
func (r *AwsKmsGrantInvalidRetireePrincipalRule) Type() string {
	return issue.ERROR
}

// Link returns the rule reference link
func (r *AwsKmsGrantInvalidRetireePrincipalRule) Link() string {
	return ""
}

// Check checks the pattern is valid
func (r *AwsKmsGrantInvalidRetireePrincipalRule) Check(runner *tflint.Runner) error {
	log.Printf("[INFO] Check `%s` rule for `%s` runner", r.Name(), runner.TFConfigPath())

	return runner.WalkResourceAttributes(r.resourceType, r.attributeName, func(attribute *hcl.Attribute) error {
		var val string
		err := runner.EvaluateExpr(attribute.Expr, &val)

		return runner.EnsureNoError(err, func() error {
			if len(val) > r.max {
				runner.EmitIssue(
					r,
					"retiree_principal must be 256 characters or less",
					attribute.Expr.Range(),
				)
			}
			if len(val) < r.min {
				runner.EmitIssue(
					r,
					"retiree_principal must be 1 characters or higher",
					attribute.Expr.Range(),
				)
			}
			if !r.pattern.MatchString(val) {
				runner.EmitIssue(
					r,
					`retiree_principal does not match valid pattern ^[\w+=,.@:/-]+$`,
					attribute.Expr.Range(),
				)
			}
			return nil
		})
	})
}
